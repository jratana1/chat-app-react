{"version":3,"sources":["components/header.js","assets/20200715_112939.jpg","logo.svg","containers/landing.js","components/answer.js","components/winner.js","components/chat.js","containers/play.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Team","src","John","alt","height","id","href","logo","width","About","Landing","Answer","props","useState","input","setInput","handleSendEvent","event","preventDefault","document","getElementById","style","visibility","chatChannel","answer","value","onKeyPress","e","key","onChange","target","type","placeholder","onClick","Winner","winner","Chat","updateUserName","userConfirmed","isUsernameConfirmed","updateCurrentMessage","chat","username","currentMessage","map","el","created_at","content","Play","cable","Cable","createConsumer","setcurrentMessage","setChat","setUsername","setUsernameConfirmed","mouseDown","setMouseDown","setWinner","useEffect","getElementsByClassName","length","scrollIntoView","behavior","block","inline","useMemo","subscriptions","create","channel","connected","received","data","action","oldArray","cell","backgroundColor","nodeItems","chatContent","this","perform","draw","clear","makeGrid","n","Array","from","_","index","i","onMouseEnter","split","handleHover","handleClick","handleEvent","val","onMouseDown","onMouseUp","App","isBusy","setBusy","basename","to","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.64e02f71.chunk.js","sourcesContent":["const Header = () => {\n  return(   \n    <div className= \"Header\"> \n        <h1 className=\"brand\">\n          <i>Chat-N-Draw!</i>\n        </h1>\n    </div>\n  )\n}\nexport default Header","export default __webpack_public_path__ + \"static/media/20200715_112939.5b54978b.jpg\";","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import John from '../assets/20200715_112939.jpg'\nimport logo from '../logo.svg'\nimport './landing.css'\n\nconst Team = () => {\n    return(\n    <div className= \"Team\">\n        <div className=\"Bio\">\n            <h1><strong>John Ratana</strong></h1>\n            <img src={John} alt=\"That's ME!\" height=\"200px\"/>\n            <div>Full-Stack Software Engineer</div>\n            <p>Ruby, Rails, Javascript, React</p>\n            <p id=\"bio\">John keeps himself busy with rock climbing, coding, cooking, and raising two children (the 4C's).  Based out of Philadelphia, he is always\n                looking for new opportunities to learn, grow, and work.  You can find him <a href=\"https://www.linkedin.com/in/john-ratana-7aa24063/\">here (linkedIn)</a>.\n                Check out his work <a href=\"https://www.linkedin.com/in/john-ratana-7aa24063/\">here (Github)</a>\n            </p>\n        </div>\n            <h1>Techs</h1>\n            <div className= \"Techs\">\n                <div className= \"Techbox\">\n                    <img src={logo} alt=\"That's ME!\" height=\"200px\" width= \"200px\"/>\n                    <p>React</p>\n                </div>\n                <div className= \"Techbox\">\n                    <img src='https://upload.wikimedia.org/wikipedia/commons/thumb/6/62/Ruby_On_Rails_Logo.svg/1200px-Ruby_On_Rails_Logo.svg.png' alt=\"That's ME!\" height=\"200px\" width= \"200px\"/>\n                    <p>Ruby On Rails</p>\n                </div>    \n            </div>\n\n    \n        <div className=\"Shoutout\">\n            <h2>Shoutout to <a href=\"https://mintbean.io/\">Mintbean.io</a> for organizing Learn-A-Thons to inspire new developers!</h2>\n        </div>\n    </div>\n    )\n}\n\nconst About = () => {\n    return (\n        <div className = \"About\">\n            <p>\n                MLB Showdown is a collectible trading card game.  Card stats are linked directly to the real life perfomance of the\n                ahtletes.  Collect them all, form your custom roster, and play against other people.  You players will get better (or worse)\n                as the season progresses. Trade with other players and make your best team.\n            </p>\n            <p>\n                Click on \"Cards\" in the navigation bar to explore the full library of cards.\n            </p>\n            <p>\n                Click on \"Roster\" to buy card packs and make your team.\n            </p>\n        </div>\n    )\n}\n\nconst Landing = () => {\n    return(   \n      <div className= \"Landing\"> \n            <About/>\n            <Team/>\n      </div>\n\n    )\n  }\n  \n  export default Landing","import React, { useState } from 'react';\n\nfunction Answer(props) {\n    const [input, setInput] = useState(\"\")\n\n    const updateInput = (event) => {\n        setInput(event.target.value);\n      }\n    \n    const handleInputKeyPress = (event) => {\n        if(event.key === 'Enter') {\n          handleSendEvent(event);\n        }\n    }\n\n    const handleSendEvent = (event) => {\n        event.preventDefault();\n \n        // if (!input || !props.isUsernameConfirmed) {\n        //   return;\n        // }\n        document.getElementById(\"winner\").style.visibility = \"hidden\"\n        props.chatChannel.answer(input);\n        setInput(\n          ''\n        );\n    }\n\nreturn (\n    <div>\n        <input\n        value={ input }\n        onKeyPress={ (e) => handleInputKeyPress(e) }\n        onChange={ (e) => updateInput(e) }\n        type='text'\n        placeholder='Enter your drawing here'\n        className='chat-input' />\n        \n        <button\n        onClick={ (e) => handleSendEvent(e) }\n        className='send'>\n        Submit Answer\n        </button>\n    </div>\n)\n}\n\nexport default Answer","function Winner(props){\n    return (\n        <strong className=\"winner\" id=\"winner\" style = {{visibility: \"hidden\"}}>{props.winner} is the winner!!!</strong>\n    )\n}\n\nexport default Winner","import React from 'react'\n\nfunction Chat(props) {\n\n    const { updateUserName, userConfirmed, isUsernameConfirmed, updateCurrentMessage, handleSendEvent, chat, username, currentMessage } = props\n\n    const renderChatLog = () => {\n        return chat.map((el) => {\n            return (\n                <div className=\"listitem\"  key={`chat_${el.id}`}>\n                    <p>{el.username}</p><p className='chat-created-at'>({ el.created_at })</p><p className='chat-message'>: { el.content }</p>\n                </div>\n            );\n          })\n    }\n\n    const handleChatInputKeyPress = (event) => {\n        if(event.key === 'Enter') {\n          handleSendEvent(event);\n        }\n      }\n\n    return(\n        <div className='stage'>\n            {isUsernameConfirmed ? <h2>Chatting as : {username}</h2> :\n            <>\n            <input\n                value={ username }\n                onChange={ (e) => updateUserName(e.target.value) }\n                type='text'\n                placeholder='Enter Your Username'\n                className='username-input'\n                id='username-input'\n                />\n            <button onClick={ () => userConfirmed(true) } className='sign-in'>Sign-In</button>\n            </>\n            }\n\n            <div className='chat-logs'>\n                { renderChatLog() }\n            </div>\n\n            {isUsernameConfirmed ? \n            <>\n            <input\n                value={ currentMessage }\n                onKeyPress={ (e) => handleChatInputKeyPress(e) }\n                onChange={ (e) => updateCurrentMessage(e.target.value) }\n                type='text'\n                placeholder='Enter your message...'\n                className='chat-input' />\n            <button onClick={ handleSendEvent } className='send'> Send </button>\n            </> : <></>}\n        </div>\n    )\n}\n\nexport default Chat","import Cable from 'actioncable';\n\nimport React, { useEffect, useState, useMemo } from 'react';\nimport Answer from '../components/answer'\nimport Winner from '../components/winner'\nimport Chat from '../components/chat'\n\n\nfunction Play() {\n      const cable = Cable.createConsumer('wss://chat-n-draw.herokuapp.com/cable');\n//   const cable = Cable.createConsumer('ws://localhost:3000/cable');\n  const [currentMessage, setcurrentMessage] = useState(\"\")\n  const [chat, setChat] = useState([]) \n  const [username, setUsername] = useState(\"\"); \n  const [isUsernameConfirmed, setUsernameConfirmed] = useState(false);\n  const [mouseDown, setMouseDown] = useState(false)\n  const [winner, setWinner] = useState(\"\")\n  \n  useEffect(\n    () => {\n      if (document.getElementsByClassName(\"listitem\").length>0) {\n        document.getElementsByClassName(\"listitem\")[document.getElementsByClassName(\"listitem\").length-1].scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'start' })\n      }\n    }, [chat])\n\n  const chatChannel = useMemo(() => {\n    return cable.subscriptions.create(\n      { channel: 'ChatChannel' }\n      ,  {\n      connected: () => {},\n      received: (data) => {\n        if (data.action === \"chat\") {\n          setChat(oldArray => [...oldArray, data])\n          if (data.winner === \"true\") {\n              setWinner(data.username)\n              document.getElementById(\"winner\").style.visibility = \"visible\"\n          }\n        }\n        if (data.action === \"draw\") {\n          document.getElementById(`cell-${data.cell}`).style.backgroundColor=\"white\"\n        }\n        if (data.action === \"clear\"){\n            const nodeItems = document.getElementsByClassName(\"grid-item\");\n            for (const c of nodeItems) {\n              c.style= {backgroundColor: `rgb(68, 68, 68)`}\n            }\n        }\n      },\n      create: function(chatContent, username) {\n        this.perform('create', {\n          content: chatContent,\n          username: username\n        });\n      },\n      draw: function(cell) {\n        this.perform('draw', {\n          cell: cell,\n        });\n      },\n      answer: function(answer) {\n          this.perform('answer',{\n          answer: answer\n        })\n      },\n      clear: function(){\n          this.perform('clear',{\n            action: \"clear\"\n        })\n      }\n    });\n  }, []);\n\n\n  const handleSendEvent = () => {\n        if (!currentMessage || !isUsernameConfirmed) { \n          return }\n        chatChannel.create(currentMessage, username);\n        setcurrentMessage('');\n    }\n\n  const updateUserName = (value) => {\n    setUsername(value);\n  }\n\n\n  const handleHover = (e) => {\n    if (mouseDown ===true){\n      e.target.style.backgroundColor=\"white\"\n      chatChannel.draw(e.target.id.split(\"-\")[1]);\n    }\n  }\n\n  const handleClick = (e) => {\n    e.target.style.backgroundColor=\"white\"\n    chatChannel.draw(e.target.id.split(\"-\")[1]);\n  }\n\n\n\n  const makeGrid = (n) => {\n    const N = 2000;\n    const numbers = Array.from({length: N}, (_, index) => index + 1);\n    return numbers.map((i) =>\n      <div key={i} id={`cell-${(n-1)*2000+i}`} className={`grid-item ${(n-1)*2000+i}`} onMouseEnter={(e)=>handleHover(e)} onClick={(e) => handleClick(e)}></div> \n      );\n  }\n\n  const handleEvent = () => {\n    setMouseDown(!mouseDown)\n  }\n\n\n  const handleClear = () => {\n    // const nodeItems = document.getElementsByClassName(\"grid-item\");\n    // for (const c of nodeItems) {\n    //   c.style= {backgroundColor: `rgb(68, 68, 68)`}\n    // }\n    chatChannel.clear()\n  }\n\n  return (\n      <div className = \"play\">\n       <div className=\"left-column\" >\n          <Chat updateUserName={updateUserName} userConfirmed={(val) => {setUsernameConfirmed(val)}} username={username} chat={chat} isUsernameConfirmed={isUsernameConfirmed} currentMessage={currentMessage} updateCurrentMessage={(val) => {setcurrentMessage(val)}} handleSendEvent={handleSendEvent}/>\n      </div>\n      <div className=\"right-column\" style= {{backgroundColor: `rgb(250, 0, 0)`}}>\n        <h3>Draw Here</h3>\n        <button\n            onClick={ (e) => handleClear(e) }\n            className='clear'>\n            Clear Canvas\n        </button>\n            <div className=\"grid-container\" onMouseDown={ (e) => handleEvent(e) } onMouseUp={ (e) => handleEvent(e) }>\n              {makeGrid(1)}\n              {makeGrid(2)}\n              {makeGrid(3)}\n              {makeGrid(4)}\n              {makeGrid(5)}\n            </div>\n      </div>\n      <div className=\"clear\">\n          <Answer username= {username} chatChannel={chatChannel} isUsernameConfirmed={isUsernameConfirmed}/>\n          <Winner winner= { winner }/>\n      </div>\n      </div>\n  );\n}\n \nexport default Play;","import React, { useState } from 'react';\nimport Header from './components/header'\nimport './App.css';\nimport Landing from './containers/landing'\nimport { HashRouter, Route, Link } from 'react-router-dom';\nimport Play from './containers/play'\n\n\nfunction App() {\n  const [isBusy, setBusy] = useState(true)\n\n  const renderLoad = () => {\n    if (isBusy) {\n      setBusy(false)\n      return <div>Loading</div>;\n    } else {\n      return (\n        <>\n          <div >\n            <ul className=\"Navbar\">\n              <li className=\"Nav-Item\"><Link to=\"/\">About</Link></li> \n              <li className=\"Nav-Item\"><Link to=\"/play\">Chat-N-Draw</Link></li>\n              <Header/>\n            </ul>\n          </div>\n          <Route exact path=\"/\" >\n            <Landing />\n          </Route>\n          <Route exact path=\"/play\" >\n            <Play />\n          </Route>\n        </>\n      )\n    }\n  }\n\n    return (\n    <HashRouter basename='/'>\n      <div className=\"App\">\n            {renderLoad()}      \n      </div>\n    </HashRouter>\n    );\n}\n\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}